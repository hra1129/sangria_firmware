// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------- //
// pio_test //
// -------- //

#define pio_test_wrap_target 0
#define pio_test_wrap 1

static const uint16_t pio_test_program_instructions[] = {
            //     .wrap_target
    0xe001, //  0: set    pins, 1                    
    0xe000, //  1: set    pins, 0                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program pio_test_program = {
    .instructions = pio_test_program_instructions,
    .length = 2,
    .origin = -1,
};

static inline pio_sm_config pio_test_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + pio_test_wrap_target, offset + pio_test_wrap);
    return c;
}

static inline void pio_test_program_init( PIO pio, uint sm, uint offset, uint pin ) {
	pio_sm_config c = pio_test_program_get_default_config( offset );
	// ステートマシンのOUTピングループを1つのピン、つまりこの関数の `pin` 
	// パラメータにマップします。
	sm_config_set_out_pins( &c, pin, 1 );
	sm_config_set_set_pins( &c, pin, 1 );
	// このピンのGPIO機能を設定する（パッドにPIOを接続する）。
	pio_gpio_init( pio, pin );
	// PIOでピンの方向を出力に設定する。
	pio_sm_set_consecutive_pindirs( pio, sm, pin, 1, true);
	// コンフィギュレーションをロードし、プログラムのスタート地点にジャンプします。
	pio_sm_init( pio, sm, offset, &c );
	// ステートマシンの実行を設定する。
	pio_sm_set_enabled( pio, sm, true );
}

#endif

